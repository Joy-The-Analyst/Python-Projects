{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "fa6c00b6-6d91-4870-81e2-f98c57034f94",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os, shutil"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "a76f6dbe-89c6-4b00-8fa5-cef60c0a8cd2",
   "metadata": {},
   "outputs": [],
   "source": [
    "path = r\"C:/Users/Morni/Downloads/Python Tutorial/\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "c45fa3d9-a4fb-4f0a-a46c-5d78a8ab7bbf",
   "metadata": {},
   "outputs": [],
   "source": [
    "file_name = os.listdir(path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "4c690b0a-473d-4cd3-8db8-f7c77b5a90c4",
   "metadata": {},
   "outputs": [],
   "source": [
    "folder_names = ['csv files','img files', 'text files']\n",
    "\n",
    "for loop in range(0,3):\n",
    "   if not os.path.exists(path + folder_names[loop]):\n",
    "     print(path + folder_names[loop])\n",
    "     os.makedirs(path + folder_names[loop])\n",
    "\n",
    "for file in file_name:\n",
    "    if \".csv\" in file and not os.path.exists(path + \"csv files/\" + file):\n",
    "        shutil.move(path + file, path + \"csv files/\" + file)\n",
    "    elif \".png\" in file and not os.path.exists(path + \"img files/\" + file):\n",
    "        shutil.move(path + file, path + \"img files/\" + file)\n",
    "    elif \".jpeg\" in file and not os.path.exists(path + \"img files/\" + file):\n",
    "        shutil.move(path + file, path + \"img files/\" + file)\n",
    "    if \".txt\" in file and not os.path.exists(path + \"text files/\" + file):\n",
    "        shutil.move(path + file, path + \"text files/\" + file)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "2cc714dc-48b0-4f49-8895-1a95f1d74661",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "aafeff76-5c84-4b23-acb5-49f053710af6",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e6b15166-a74d-4809-87ae-33bd35d787de",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a735cb5f-2e3d-48c2-bb69-83917056d660",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cf97a1ba-f4da-402c-9537-2de46776c6f2",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c64f4c08-166c-448f-a316-df84d761b8bc",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fa732e25-d907-4cb3-b9bc-631b50d5e6f5",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "eee1cc46-99e4-4ac6-a869-493f12ef5382",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8031ee7e-216b-46b5-a99e-a53451e388a7",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f26dab18-1846-4ef9-9d13-f0ff1386b156",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "412c7218-48e8-4888-b63b-f509d5ddaf94",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b32f2a5e-9ee7-4f57-b014-150b98d1b5ee",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cf6e7dac-a2d9-4d98-a993-f4db036f193c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ceeea611-65b6-439f-ad6c-3708778d006a",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c975cf21-79bf-448e-b780-acfc28da0765",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
